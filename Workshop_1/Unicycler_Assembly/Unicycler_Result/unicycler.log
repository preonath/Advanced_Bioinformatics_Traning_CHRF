
Starting Unicycler (2023-06-12 01:25:44)
----------------------------------------
    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you provided only short reads, Unicycler will essentially function as a SPAdes-optimiser. It will try many k-mer sizes, choose the best based on contig length and graph connectivity, and scaffold the graph using SPAdes repeat resolution.
    For more information, please see https://github.com/rrwick/Unicycler

Command: /usr/bin/unicycler -1 ERR2663496_1.fastq.gz -2 ERR2663496_2.fastq.gz -o Unicycler_Result --min_fasta_length 300 -t 16 --keep 1

Unicycler version: v0.4.8
Using 16 threads

Making output directory:
  /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result

Dependencies:
  Program         Version           Status  
  spades          3.13.1            good    
  racon                             not used
  makeblastdb     2.13.0+           good    
  tblastn         2.13.0+           good    
  bowtie2-build   2.5.1             good    
  bowtie2         2.5.1             good    
  samtools        1.17              good    
  java            17.0.3-internal   good    
  pilon           ?                 good    
  bcftools                          not used


SPAdes read error correction (2023-06-12 01:25:54)
--------------------------------------------------
    Unicycler uses the SPAdes read error correction module to reduce the number of errors in the short read before SPAdes assembly. This can make the assembly faster and simplify the assembly graph structure.

Command: /usr/lib/spades/bin/spades.py -1 /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/ERR2663496_1.fastq.gz -2 /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/ERR2663496_2.fastq.gz -o /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/spades_assembly/read_correction --threads 16 --only-error-correction

Corrected reads:
  /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/spades_assembly/corrected_1.fastq.gz
  /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/spades_assembly/corrected_2.fastq.gz


Choosing k-mer range for assembly (2023-06-12 01:29:04)
-------------------------------------------------------
    Unicycler chooses a k-mer range for SPAdes based on the length of the input reads. It uses a wide range of many k-mer sizes to maximise the chance of finding an ideal assembly.

SPAdes maximum k-mer: 127
Median read length: 150
K-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127


SPAdes assemblies (2023-06-12 01:29:13)
---------------------------------------
    Unicycler now uses SPAdes to assemble the short reads. It scores the assembly graph for each k-mer using the number of contigs (fewer is better) and the number of dead ends (fewer is better). The score function is 1/(c*(d+2)), where c is the contig count and d is the dead end count.

K-mer   Contigs   Dead ends   Score   
   27                           failed
   47                           failed
   63                           failed
   77                           failed
   89                           failed
   99                           failed
  107                           failed
  115                           failed
  121                           failed
  127       125           0   4.00e-03 ← best

Read depth filter: removed 32 contigs totalling 12140 bp
Deleting /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/spades_assembly/


Determining graph multiplicity (2023-06-12 01:31:56)
----------------------------------------------------
    Multiplicity is the number of times a sequence occurs in the underlying sequence. Single-copy contigs (those with a multiplicity of one, occurring only once in the underlying sequence) are particularly useful.

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/001_best_spades_graph.gfa


Cleaning graph (2023-06-12 01:31:56)
------------------------------------
    Unicycler now performs various cleaning procedures on the graph to remove overlaps and simplify the graph structure. The end result is a graph ready for bridging.

Graph overlaps removed

Removed zero-length segments:
    76, 77, 78, 79, 83, 84, 87, 88, 89, 93, 96, 106

Removed zero-length segments:
    94, 97

Merged small segments:
    98, 99, 100, 101, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/002_overlaps_removed.gfa

    Unicycler now selects a set of anchor contigs from the single-copy contigs. These are the contigs which will be connected via bridges to form the final assembly.

46 anchor segments (4,718,248 bp) out of 90 total segments (4,836,493 bp)


Creating SPAdes contig bridges (2023-06-12 01:31:57)
----------------------------------------------------
    SPAdes uses paired-end information to perform repeat resolution (RR) and produce contigs from the assembly graph. SPAdes saves the graph paths corresponding to these contigs in the contigs.paths file. When one of these paths contains two or more anchor contigs, Unicycler can create a bridge from the path.

                                Bridge
Start       Path       End     quality
  -33        76        39         62.2
  -20    -80 → -80     27         59.8
   12   67 → 54 → 67   -21         4.8
   31        76        17         63.1


Creating loop unrolling bridges (2023-06-12 01:31:57)
-----------------------------------------------------
    When a SPAdes contig path connects an anchor contig with the middle contig of a simple loop, Unicycler concludes that the sequences are contiguous (i.e. the loop is not a separate piece of DNA). It then uses the read depth of the middle and repeat contigs to guess the number of times to traverse the loop and makes a bridge.

                                  Loop count   Loop count    Loop    Bridge
Start   Repeat   Middle     End    by repeat    by middle   count   quality
   12       67       54     -21         0.74         1.03       1      44.7


Applying bridges (2023-06-12 01:31:57)
--------------------------------------
    Unicycler now applies to the graph in decreasing order of quality. This ensures that when multiple, contradictory bridges exist, the most supported option is used.

Bridge type   Start → end   Path         Quality
SPAdes           31 → 17    76            63.134
SPAdes          -33 → 39    76            62.233
SPAdes          -20 → 27    -80, -80      59.812
loop             12 → -21   67, 54, 67    44.658

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/003_bridges_applied.gfa


Bridged assembly graph (2023-06-12 01:31:57)
--------------------------------------------
    The assembly is now mostly finished and no more structural changes will be made. Ideally the assembly graph should now have one contig per replicon and no erroneous contigs (i.e a complete assembly). If there are more contigs, then the assembly is not complete.

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/004_final_clean.gfa

Component   Segments   Links   Length      N50       Longest segment   Status    
    total         82     126   4,836,983   204,168           488,731             
        1         81     125   4,730,277   204,168           488,731   incomplete
        2          1       1     106,706   106,706           106,706     complete


Polishing assembly with Pilon (2023-06-12 01:31:57)
---------------------------------------------------
    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any remaining small-scale errors with the assembly.

Aligning reads to find appropriate insert size range...
Insert size 1st percentile:  237
Insert size 99th percentile: 374

Pilon polish round 1
No Pilon changes

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/005_polished.gfa


Rotating completed replicons (2023-06-12 01:45:35)
--------------------------------------------------
    Any completed circular contigs (i.e. single contigs which have one link connecting end to start) can have their start position changed without altering the sequence. For consistency, Unicycler now searches for a starting gene (dnaA or repA) in each such contig, and if one is found, the contig is rotated to start with that gene on the forward strand.

Segment   Length    Depth   Starting gene     Position   Strand    Identity   Coverage
     18   106,706   1.16x   UniRef90_Q934T6     46,159   reverse     100.0%     100.0%

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/006_rotated.gfa


Assembly complete (2023-06-12 01:45:49)
---------------------------------------
Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/assembly.gfa
Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/assembly.fasta














Starting Unicycler (2023-06-12 15:56:34)
----------------------------------------
    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you provided only short reads, Unicycler will essentially function as a SPAdes-optimiser. It will try many k-mer sizes, choose the best based on contig length and graph connectivity, and scaffold the graph using SPAdes repeat resolution.
    For more information, please see https://github.com/rrwick/Unicycler

Command: /usr/bin/unicycler -1 ERR2663496_1.fastq.gz -2 ERR2663496_2.fastq.gz -o Unicycler_Result --min_fasta_length 300 -t 16 --keep 1

Unicycler version: v0.4.8
Using 16 threads

The output directory already exists and files may be reused or overwritten:
  /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result

Dependencies:
  Program         Version           Status  
  spades          3.13.1            good    
  racon                             not used
  makeblastdb     2.13.0+           good    
  tblastn         2.13.0+           good    
  bowtie2-build   2.5.1             good    
  bowtie2         2.5.1             good    
  samtools        1.17              good    
  java            17.0.3-internal   good    
  pilon           ?                 good    
  bcftools                          not used

SPAdes graph already exists. Will use this graph instead of running SPAdes:
  /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/001_best_spades_graph.gfa


Determining graph multiplicity (2023-06-12 15:56:35)
----------------------------------------------------
    Multiplicity is the number of times a sequence occurs in the underlying sequence. Single-copy contigs (those with a multiplicity of one, occurring only once in the underlying sequence) are particularly useful.


Cleaning graph (2023-06-12 15:56:35)
------------------------------------
    Unicycler now performs various cleaning procedures on the graph to remove overlaps and simplify the graph structure. The end result is a graph ready for bridging.

Graph overlaps removed

Removed zero-length segments:
    76, 77, 78, 79, 83, 84, 87, 88, 89, 93, 96, 106

Removed zero-length segments:
    94, 97

Merged small segments:
    98, 99, 100, 101, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/002_overlaps_removed.gfa

    Unicycler now selects a set of anchor contigs from the single-copy contigs. These are the contigs which will be connected via bridges to form the final assembly.

46 anchor segments (4,718,248 bp) out of 90 total segments (4,836,493 bp)


Creating SPAdes contig bridges (2023-06-12 15:56:35)
----------------------------------------------------
    SPAdes uses paired-end information to perform repeat resolution (RR) and produce contigs from the assembly graph. SPAdes saves the graph paths corresponding to these contigs in the contigs.paths file. When one of these paths contains two or more anchor contigs, Unicycler can create a bridge from the path.

                                Bridge
Start       Path       End     quality
  -33        76        39         62.2
  -20    -80 → -80     27         59.8
   12   67 → 54 → 67   -21         4.8
   31        76        17         63.1


Creating loop unrolling bridges (2023-06-12 15:56:35)
-----------------------------------------------------
    When a SPAdes contig path connects an anchor contig with the middle contig of a simple loop, Unicycler concludes that the sequences are contiguous (i.e. the loop is not a separate piece of DNA). It then uses the read depth of the middle and repeat contigs to guess the number of times to traverse the loop and makes a bridge.

                                  Loop count   Loop count    Loop    Bridge
Start   Repeat   Middle     End    by repeat    by middle   count   quality
   12       67       54     -21         0.74         1.03       1      44.7


Applying bridges (2023-06-12 15:56:35)
--------------------------------------
    Unicycler now applies to the graph in decreasing order of quality. This ensures that when multiple, contradictory bridges exist, the most supported option is used.

Bridge type   Start → end   Path         Quality
SPAdes           31 → 17    76            63.134
SPAdes          -33 → 39    76            62.233
SPAdes          -20 → 27    -80, -80      59.812
loop             12 → -21   67, 54, 67    44.658

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/003_bridges_applied.gfa


Bridged assembly graph (2023-06-12 15:56:35)
--------------------------------------------
    The assembly is now mostly finished and no more structural changes will be made. Ideally the assembly graph should now have one contig per replicon and no erroneous contigs (i.e a complete assembly). If there are more contigs, then the assembly is not complete.

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/004_final_clean.gfa

Component   Segments   Links   Length      N50       Longest segment   Status    
    total         82     126   4,836,983   204,168           488,731             
        1         81     125   4,730,277   204,168           488,731   incomplete
        2          1       1     106,706   106,706           106,706     complete


Polishing assembly with Pilon (2023-06-12 15:56:35)
---------------------------------------------------
    Unicycler now conducts multiple rounds of Pilon in an attempt to repair any remaining small-scale errors with the assembly.

Aligning reads to find appropriate insert size range...
Insert size 1st percentile:  237
Insert size 99th percentile: 374

Pilon polish round 1
No Pilon changes

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/005_polished.gfa


Rotating completed replicons (2023-06-12 16:10:11)
--------------------------------------------------
    Any completed circular contigs (i.e. single contigs which have one link connecting end to start) can have their start position changed without altering the sequence. For consistency, Unicycler now searches for a starting gene (dnaA or repA) in each such contig, and if one is found, the contig is rotated to start with that gene on the forward strand.

Segment   Length    Depth   Starting gene     Position   Strand    Identity   Coverage
     18   106,706   1.16x   UniRef90_Q934T6     46,159   reverse     100.0%     100.0%

Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/006_rotated.gfa


Assembly complete (2023-06-12 16:10:25)
---------------------------------------
Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/assembly.gfa
Saving /home/asus/Desktop/CHRF_Project/Bioinformatics_Traning/Advance_Bioinformatics_Traning/Unicycler_Assembly/Unicycler_Result/assembly.fasta

